import Artel
import js = Artel.JavaScript

external
{
  // MvccMap

  #js.ВнешняяРеализация(модуль = "reactronic")
  hidden
  type MvccMap<K, V> = object MvccObject
  {
    on create(isObservable: YesNo, map: Map<K, V>)

    operation clear()

    operation delete(key: K): YesNo

    operation forEach(callbackfn: operation(value: V, key: K, map: Map<K, V>), thisArg: Object? = empty)

    operation get`(key: K): V?

    operation has(key: K): YesNo

    operation set`(key: K, value: V)

    // operation entries(): IterableIterator<Object { _0: K, _1: V }>

    operation keys(): IterableIterator<K>

    operation values(): IterableIterator<V>

    // operation [Symbol.toStringTag](): Текст

    guarded
    {
      size: Integer

      mutable: Map<K, V>
    }
  }

  // TransactionalMap

  #js.ВнешняяРеализация(модуль = "reactronic")
  type TransactionalMap<K, V> = object MvccMap<K, V>
  {
    on create()

    // on create(iterable: Iterable</*(!) защищено */ Object { _0: K, _1: V }>? = empty)/*(!) any */ Object?

    on create(args: Object? = empty)
  }

  // ObservableMap

  type ObservableMap<K, V> = object MvccMap<K, V>
  {
    on create()

    // on create(iterable: Iterable</*(!) защищено */ Object { _0: K, _1: V }>? = empty)

    on create(args: Object? = empty)
  }
}
