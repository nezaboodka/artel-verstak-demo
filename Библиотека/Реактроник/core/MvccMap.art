
import JS = Artel.JavaScript

external
{
  #JS.ВнешняяРеализация(модуль = "reactronic")
  hidden by package
  type MvccMap<K, V> = object MvccObject
  {
    // hidden
    // impl

    on create(isObservable: YesNo, map: Map<K, V>)

    operation clear()

    operation delete(key: K): YesNo

    operation for-each(callbackfn: operation(value: V, key: K, map: Map<K, V>), this-arg: Object? = none)

    operation get(key: K): V?

    operation has(key: K): YesNo

    operation set(key: K, value: V)

    guarded
    size: Integer

    // operation entries(): IterableIterator<Object { _0: K, _1: V }>

    // operation keys(): IterableIterator<K>

    // operation values(): IterableIterator<V>

    // operation [Symbol.toStringTag](): Текст

    // hidden guarded
    // mutable
  }


  #JS.ВнешняяРеализация(модуль = "reactronic")
  type TransactionalMap<K, V> = object MvccMap<K, V>
  {
    on create()

    // on create(iterable: Iterable</*(!) защищено */ Object { _0: K, _1: V }>? = none)/*(!) any */ Object?

    on create(args: Object? = none)
  }


  type ObservableMap<K, V> = object MvccMap<K, V>
  {
    on create()

    // on create(iterable: Iterable</*(!) защищено */ Object { _0: K, _1: V }>? = none)

    on create(args: Object? = none)
  }
}
