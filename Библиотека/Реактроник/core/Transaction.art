
import JS = Artel.JavaScript

external
{
  #JS.ВнешняяРеализация(модуль = "reactronic")
  type Transaction = /*(!) abstract */ object Worker
  {
    global hidden set
    current: Transaction

    abstract hidden set
    id: Number

    abstract hidden set
    hint: Text

    abstract hidden set
    options: SnapshotOptions;

    abstract hidden set
    timestamp: Number

    abstract hidden set
    error`: Error?

    abstract hidden set
    changeset: Changeset

    abstract hidden set
    margin: Number

    abstract
    operation run`<T>(func: F<T>, args: JS.МассивПараметров<Object?>): T

    abstract
    operation inspect<T>(func: F<T>, args: JS.МассивПараметров<Object?>): T

    abstract
    operation apply()

    abstract
    operation seal(): Transaction // this

    abstract
    operation wrap<T>(func: F<T>, secondary: YesNo): F<T>

    abstract
    operation cancel(error`: Error, retry-after-or-ignore: Worker? /*(!)| null*/ = none): Transaction // this

    abstract hidden set
    is-canceled: YesNo

    abstract hidden set
    is-finished: YesNo

    async
    operation when-finished()

    global
    operation create(options: SnapshotOptions /*(!) | null*/): Transaction

    global
    operation run`<T>(options: SnapshotOptions /*(!)| null*/, func: F<T>, args: JS.МассивПараметров<Object?>): T

    global
    operation separate<T>(func: F<T>, args: JS.МассивПараметров<Object?>): T

    global
    operation outside<T>(func: F<T>, args: JS.МассивПараметров<Object?>): T

    global
    operation is-frame-over(every-n: Number? = none, time-limit: Number? = none): YesNo

    global async
    operation request-next-frame(sleep-time: Number? = none): JS.Promise<None>

    global hidden set
    is-canceled: YesNo
  }
}
