
import JS = Artel.JavaScript

external
{
  #JS.ВнешняяРеализация(модуль = "reactronic")
  type Monitor = /*(!) incomplete */ object ObservableObject
  {
    abstract hidden set
    is-active: YesNo

    abstract hidden set
    counter: Number

    abstract hidden set
    workers: SetReader<Worker>

    abstract hidden set
    duration: Number

    global
    operation create(hint: Text, activation-delay: Number, deactivation-delay: Number, duration-resolution: Number): Monitor
  }


  hidden (in package)
  type MonitorImpl = object Monitor
  {
    is-active: YesNo

    counter: Number

    workers: Set<Worker>

    duration: Number

    hidden set
    internals: object
    {
        started: Number
        activation-delay: Number
        activation-timeout: None
        deactivation-delay: Number
        deactivation-timeout: None
        duration-resolution: Number
    };

    operation enter(worker: Worker)

    operation leave(worker: Worker)

    global
    operation create(hint: Text, activation-delay: Number, deactivation-delay: Number, duration-resolution: Number): MonitorImpl

    global
    operation enter(mon: MonitorImpl, worker: Worker)
    
    global
    operation leave(mon: MonitorImpl, worker: Worker)

    // private static
    // doCreate

    // hidden global
    // activate

    // hidden global
    // deactivate

    // hidden global
    // tick
  }
}
