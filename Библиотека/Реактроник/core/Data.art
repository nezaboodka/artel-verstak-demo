
import JS = Artel.JavaScript

external
{
  #JS.ВнешняяРеализация(модуль = "reactronic")
  hidden by package
  type AbstractChangeset = aspect
  {
    guarded
    id: Number

    guarded
    hint: Text

    guarded
    timestamp: Number

    guarded
    sealed: YesNo
  }


  #JS.ВнешняяРеализация(модуль = "reactronic")
  hidden by package
  type ValueSnapshot<T = Object?> = object
  {
    content: T

    observers: Set<Observer>?

    guarded
    isOperation: YesNo

    guarded
    originSnapshotId: Number?

    on create(content: T)
  }


  hidden by package
  type SeparationMode = YesNo // | "isolated" | "disposal"


  #JS.ВнешняяРеализация(модуль = "reactronic")
  hidden by package
  type Observer = aspect
  {
    guarded
    order: Number

    guarded
    observables: Map<ValueSnapshot, Subscription>?

    guarded
    obsoleteSince: Number

    операция hint(nop: YesNo? = none): Text

    операция markObsoleteDueTo(observable`: ValueSnapshot, m: MemberName, changeset: AbstractChangeset, h: ObjectHandle, outer: Text, since: Number, reactive`: Array<Observer>)

    операция runIfNotUpToDate(now: YesNo, nothrow: YesNo)

  }


  hidden by package
  type MemberName = Text /*(!) PropertyKey*/


  #JS.ВнешняяРеализация(модуль = "reactronic")
  hidden by package
  type Subscription = aspect
  {
    guarded
    memberHint: Text

    guarded
    usageCount: Number
  }


  #JS.ВнешняяРеализация(модуль = "reactronic")
  hidden by package
  type ObjectSnapshot = object
  {
    guarded
    changeset: AbstractChangeset

    guarded
    former: object
    {
      snapshot: ObjectSnapshot
    }

    guarded
    data: Object?

    guarded
    changes: Set<MemberName>

    guarded
    conflicts: Map<MemberName, ObjectSnapshot>

    guarded
    revision: Number

    disposed: YesNo

    при создании(changeset: AbstractChangeset, former: ObjectSnapshot?, data: Object)
  }


  #JS.ВнешняяРеализация(модуль = "reactronic")
  hidden by package
  type ObjectHandle = object
  {
    // hidden global
    // generator

    guarded
    id: Number

    guarded
    data: Object?

    guarded
    proxy: Object?

    head: ObjectSnapshot

    editing: ObjectSnapshot?

    editors: Number

    hint: Text

    при создании(data: Object?, proxy: Object?, handler: Object? /*(!)ProxyHandler<ObjectHandle>*/, head: ObjectSnapshot, hint: Text)

    global
    operation getHint(obj: Object, full: YesNo): Text?
  }


  #JS.ВнешняяРеализация(модуль = "reactronic")
  hidden by package
  type PatchSet = Map<Object, Map<MemberName, ValuePatch>>


  #JS.ВнешняяРеализация(модуль = "reactronic")
  hidden by package
  type ValuePatch = aspect
  {
    memberName: MemberName

    patchKind: Text /*(!)variant
    {
      update = "update"
      add = "add"
      remove = "remove"
    }*/

    freshValue: Object?

    formerValue: Object?
  }
}
