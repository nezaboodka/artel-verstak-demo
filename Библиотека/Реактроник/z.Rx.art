import artel
import artel.js

external
{
  #ВнешняяРеализация(модуль = "reactronic")
  type Rx = object
  {
    global
    operation why(brief: YesNo = no): Text

    global
    operation getController<T>(method: F<T>): Controller<T>

    global
    operation pullLastResult<T>(method: F<Promise<T>>, args: Array<Object?>? = empty): T?

    global
    operation configureCurrentOperation(options: Partial<MemberOptions>): MemberOptions

    global
    operation getRevisionOf(obj: Object?): Integer

    global
    operation takeSnapshot<T>(obj: T): T

    global
    operation dispose`(obj: Object?)

    global
    operation setLoggingMode(isOn: YesNo, options: LoggingOptions? = empty)

    global
    operation setLoggingHint<T = Object>(obj: T, name: Text?)

    global
    operation getLoggingHint<T = Object>(obj: T, full: YesNo = no): Text?

    global
    operation setProfilingMode(isOn: YesNo, options: ProfilingOptions? = empty)

    reactivityAutoStartDisabled: YesNo

    protected
    isLogging: YesNo

    protected
    loggingOptions: LoggingOptions
  }

  // Global Operations

  #ВнешняяРеализация(модуль = "reactronic")
  #js.МассивПараметров
  operation transaction<T>(func: F<T>, args: Array<Object?>): T

  #ВнешняяРеализация(модуль = "reactronic")
  #js.МассивПараметров
  operation nonreactive`<T>(func: F<T>, args: Array<Object?>): T

  #ВнешняяРеализация(модуль = "reactronic")
  #js.МассивПараметров
  operation sensitive<T>(sensitivity: YesNo, func: F<T>, args: Array<Object?>): T
}
