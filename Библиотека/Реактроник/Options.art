
import JS = Artel.JavaScript

external
{
  type SnapshotOptions = aspect
  {
    hidden set
    hint: Text?

    hidden set
    separation: SeparationMode?

    hidden set
    journal: Journal?

    hidden set
    logging: PartialLoggingOptions?

    hidden set
    token: Объект?
  }


  type MemberOptions = aspect
  {
    hidden set
    kind: Kind

    hidden set
    separation: SeparationMode

    hidden set
    order: Number

    hidden set
    noSideEffects: YesNo

    hidden set
    triggeringArgs: YesNo

    hidden set
    throttling: Number

    hidden set
    reentrance: Reentrance

    hidden set
    journal: Journal?

    hidden set
    monitor: Monitor? /*(!) | null */

    hidden set
    logging: PartialLoggingOptions
  }


  #JS.ВнешняяРеализация(модуль = "reactronic")
  type Kind = variant
  {
    plain = 0
    transactional` = 1
    reactive = 2
    cached = 3
  }


  #JS.ВнешняяРеализация(модуль = "reactronic")
  type Reentrance = variant
  {
    preventWithError = 1
    waitAndRestart = 0
    cancelPrevious = -1
    cancelAndWaitPrevious = -2
    overwritePrevious = -3
    runSideBySide = -4
  }

  type AbstractReaction<T> = aspect
  {
    hidden set
    options: MemberOptions

    hidden set
    args: ListReader<Object?>

    hidden set
    result: T

    hidden set
    error`: Object?

    hidden set
    stamp: Number

    hidden set
    isUpToDate: YesNo

    operation configure(options: PartialMemberOptions): MemberOptions

    operation markObsolete()

    operation pullLastResult(args: List<Object?>? = none): T?
  }
}

// TS: Parial<MemberOptions>
type PartialMemberOptions = object
{
  kind: Kind? = none

  separation: SeparationMode? = none

  order: Number? = none

  noSideEffects: YesNo? = none

  triggeringArgs: YesNo? = none

  throttling: Number? = none

  reentrance: Reentrance? = none

  journal: Journal? = none

  monitor: Monitor? = none

  logging: LoggingOptions? = none
}
