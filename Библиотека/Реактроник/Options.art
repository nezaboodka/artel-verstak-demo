
import JS = Artel.JavaScript

external
{
  type SnapshotOptions = aspect
  {
    guarded
    hint: Text?

    guarded
    separation: SeparationMode?

    guarded
    journal: Journal?

    guarded
    logging: PartialLoggingOptions?

    guarded
    token: Объект?
  }


  type MemberOptions = aspect
  {
    guarded
    kind: Kind

    guarded
    separation: SeparationMode

    guarded
    order: Number

    guarded
    noSideEffects: YesNo

    guarded
    triggeringArgs: YesNo

    guarded
    throttling: Number

    guarded
    reentrance: Reentrance

    guarded
    journal: Journal?

    guarded
    monitor: Monitor? /*(!) | null */

    guarded
    logging: PartialLoggingOptions
  }


  #JS.ВнешняяРеализация(модуль = "reactronic")
  type Kind = variant
  {
    Plain = 0
    Transactional = 1
    Reactive = 2
    Cached = 3
  }


  #JS.ВнешняяРеализация(модуль = "reactronic")
  type Reentrance = variant
  {
    PreventWithError = 1
    WaitAndRestart = 0
    CancelPrevious = -1
    CancelAndWaitPrevious = -2
    OverwritePrevious = -3
    RunSideBySide = -4
  }

  type AbstractReaction<T> = aspect
  {
    guarded
    options: MemberOptions

    guarded
    args: ListReader<Object?>

    guarded
    result: T

    guarded
    error`: Object?

    guarded
    stamp: Number

    guarded
    isUpToDate: YesNo

    operation configure(options: PartialMemberOptions): MemberOptions

    operation markObsolete()

    operation pullLastResult(args: List<Object?>? = none): T?
  }
}

// TS: Parial<MemberOptions>
type PartialMemberOptions = object
{
  kind: Kind? = none

  separation: SeparationMode? = none

  order: Number? = none

  noSideEffects: YesNo? = none

  triggeringArgs: YesNo? = none

  throttling: Number? = none

  reentrance: Reentrance? = none

  journal: Journal? = none

  monitor: Monitor? = none

  logging: LoggingOptions? = none
}
