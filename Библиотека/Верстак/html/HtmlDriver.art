
import JS = Artel.JavaScript
import DOM = Browser
import Реактроник

external
{
  #JS.ВнешняяРеализация(модуль = "verstak")
  type WebDriver<T: DOM.Element, M = Object?> = object ElDriver<T, M>
  {
    operation setNativeElement(node: RxNode<El<T, M>>)

    operation initialize(node: RxNode<El<T, M>>)

    operation finalize(node: RxNode<El<T, M>>, isLeader: YesNo): YesNo

    operation mount(node: RxNode<El<T, M>>)

    operation update(node: RxNode<El<T, M>>)

    global
    operation findBrotherlyHost<T, R>(node: RxNode<El<T>>): RxNode<El<R>>?

    global
    operation findBrotherlyPrevSibling<T, R>(node: RxNode<El<T>>): RxNode<El<R>>?

    global
    blinkingEffectMarker: Text?
  }


  #JS.ВнешняяРеализация(модуль = "verstak")
  type StaticDriver<T: DOM.HTMLElement> = object WebDriver<T>
  {
    guarded
    native: T

    on create(native: T, name: Text, isRow: YesNo, predefine: SimpleDelegate<El<T>>? = none)

    operation setNativeElement(node: RxNode<El<T>>)
  }


  #JS.ВнешняяРеализация(модуль = "verstak")
  type HtmlElementDriver<T: DOM.HTMLElement, M = Object?> = object WebDriver<T, M>
  {
    operation setNativeElement(node: RxNode<El<T, M>>)
  }


  #JS.ВнешняяРеализация(модуль = "verstak")
  type SvgElementDriver<T: DOM.SVGElement, M = Object?> = object WebDriver<T, M>
  {
    operation setNativeElement(node: RxNode<El<T, M>>)
  }
}
