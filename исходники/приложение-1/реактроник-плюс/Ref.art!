внешнее {
  //// The below copyright notice and the license permission notice
  //// shall be included in all copies or substantial portions.
  //// Copyright (C) 2016-2022 Nezaboodka Software <contact@nezaboodka.com>
  //// License: https://raw.githubusercontent.com/nezaboodka/reactronic/master/LICENSE
  //// By contributing, you agree that your contributions will be
  //// automatically licensed under the license referred above.
  тип BoolOnly<T> = Pick<T, /*(!) any */ Объект?>

  тип GivenTypeOnly<T, V> = Pick<T, /*(!) any */ Объект?>

  операция refs<O = Объект>(owner: O): /*(!) any */ Объект?

  операция toggleRefs<O = Объект>(owner: O): /*(!) any */ Объект?

  операция customToggleRefs<T, O = Объект>(owner: O, value1: T, value2: T): /*(!) any */ Объект?

  тип Ref<T> = объект
  {
    при создании(owner: /*(!) any */ Объект?, name: Текст, index: Число = -1)/*(!) any */ Объект?

    операция unobservable(): T

    операция observe(): T

    операция unobserve(): T

    глобальный 
    операция sameRefs(v1: Ref, v2: Ref): ДаНет

    глобальный 
    операция similarRefs(v1: Ref, v2: Ref): ДаНет

    variable: T
      при чтении { }
      при записи { }
  }

  тип ToggleRef<T> = объект на основе Ref<T>
  {
    при создании(owner: /*(!) any */ Объект?, name: Текст, valueOn: T, valueOff: T)/*(!) any */ Объект?

    операция toggle()
  }

  //// Internal
}
